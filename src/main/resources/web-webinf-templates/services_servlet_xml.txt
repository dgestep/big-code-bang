<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringModelInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<tx:annotation-driven proxy-target-class="false" transaction-manager="transactionManager" />
	<aop:aspectj-autoproxy/>

	<context:component-scan base-package="${topLevelDomain}.${companyName}.${productName}.restcontroller" />

	<bean id="restControllerAroundAdvice" class="${topLevelDomain}.${companyName}.${productName}.restcontroller.RestControllerJsonAroundAdvice"/>

	<aop:config>
		<aop:pointcut id="restControllerPointCut" expression="execution(* ${topLevelDomain}.${companyName}.${productName}.restcontroller..*.*(..))"/>

		<aop:aspect id="restControllerProxy" ref="restControllerAroundAdvice">
			<aop:around pointcut-ref="restControllerPointCut" method="proxyService"/>
		</aop:aspect>
	</aop:config>

	<bean id="tokenRepository" class="${topLevelDomain}.${companyName}.${productName}.restcontroller.security.CustomCookieCsrfTokenRepository">
		<property name="cookieHttpOnly" value="false"/>
	</bean>

	<bean id="restServicesFilter" class="${topLevelDomain}.${companyName}.${productName}.restcontroller.security.RestServiceFilter">
		<property name="postOnly" value="false"/>
		<property name="authenticationManager" ref="authenticationManager"/>
	</bean>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<ref bean="roleHierarchyVoter"/>
			</list>
		</constructor-arg>
	</bean>

	<bean id="roleHierarchyVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<constructor-arg ref="roleHierarchy"/>

		<property name="rolePrefix" value=""/>
	</bean>

	<bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ADMIN > USER
				USER > READONLY
			</value>
		</property>
	</bean>

	<security:http pattern="/restcontroller/security/login" security="none"/>
	<security:http pattern="/restcontroller/security/auto-login" security="none"/>
	<security:http pattern="/restcontroller/health" security="none"/>
	<security:http pattern="/restcontroller/health/version" security="none"/>
	<security:http pattern="/restcontroller/user/reset-confirmation" security="none"/>
	<security:http pattern="/restcontroller/user/reset-password-by-confirmation" security="none"/>
	<security:http pattern="/restcontroller/**" entry-point-ref="RestAuthenticationEntryPoint"
				   create-session="stateless" use-expressions="true" access-decision-manager-ref="accessDecisionManager">
		<!--suppress SpringModelInspection -->
		<security:custom-filter ref="restServicesFilter" before="CSRF_FILTER"/>
		<security:csrf token-repository-ref="tokenRepository"/>
	</security:http>
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="RestAuthenticationManager"/>
	</security:authentication-manager>

	<security:global-method-security
			secured-annotations="enabled"
			jsr250-annotations="enabled"
			pre-post-annotations="enabled"
			access-decision-manager-ref="accessDecisionManager"/>

 	<bean id="contentNegotiationManager"  class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    	<property name="defaultContentType" value="application/json"/>
    	<property name="favorPathExtension" value="true"/>
    	<property name="favorParameter" value="true"/>
    	<property name="parameterName" value="ext"/>
    	<property name="ignoreAcceptHeader" value="false"/>
    	<property name="useJaf" value="false"/>
    	<property name="mediaTypes">
        	<map>
        		<entry key="html" value="text/html"/>
            	<entry key="json" value="application/json"/>
            	<entry key="pdf" value="application/pdf"/>
            	<entry key="xml" value="application/xml"/>
            	<entry key="csv" value="text/csv"/>
    	   	</map>
    	</property>
	</bean>

	<!-- bypasses beans and properties which cannot be converted to json -->
	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
   		<property name="objectMapper">
			<bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
				<property name="failOnEmptyBeans" value="false" />
				<property name="failOnUnknownProperties" value="false" />
			</bean>
   		</property>
   	</bean>

	<!--suppress RequiredBeanTypeInspection -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" enable-matrix-variables="true">
		<mvc:message-converters register-defaults="true">
			<ref bean="mappingJackson2HttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="xmlRootElementPayloadMethodProcessor" class="org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessor"/>
	<bean id="jaxbElementPayloadMethodProcessor" class="org.springframework.ws.server.endpoint.adapter.method.jaxb.JaxbElementPayloadMethodProcessor"/>
	<bean id="defaultMethodEndpointAdapter" class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter">
		<property name="methodArgumentResolvers">
			<list>
				<ref bean="xmlRootElementPayloadMethodProcessor"/>
				<ref bean="jaxbElementPayloadMethodProcessor"/>
			</list>
		</property>
		<property name="methodReturnValueHandlers">
			<list>
				<ref bean="xmlRootElementPayloadMethodProcessor"/>
				<ref bean="jaxbElementPayloadMethodProcessor"/>
			</list>
		</property>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="20971520" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
</beans>

