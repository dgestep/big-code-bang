import {Component, OnInit} from "@angular/core";
import {UserService} from "../shared/user.service";
import { ResponseMessageHelper } from "../shared/response.message.helper";
import { ResponseMessage } from "../shared/response.message";
import { ALERT_DANGER, ALERT_SUCC } from "../shared/constants";
import {FormBuilder, FormGroup} from "@angular/forms";

@Component({
    selector: 'password-reset',
    templateUrl: 'app/login/password.reset.component.html'
})
export class PasswordResetComponent implements OnInit{
    private resetForm : FormGroup;

    constructor(private userService : UserService, private msgHelper : ResponseMessageHelper, private formBuilder : FormBuilder){
        this.msgHelper.clearMessages();
    }

    ngOnInit() {
        this.resetForm = this.formBuilder.group({
           emailAddress : ['']
        });
    }

    sendReset() {
        let container : any = new FormData();
        let messages: Array<ResponseMessage> = [];

        container.append("emailAddress", this.resetForm.value.emailAddress);
        this.userService.sendPasswordResetConfirm(container).subscribe((res) => {
            if (res[0].message === "Success.") {
                messages.push(new ResponseMessage("Success!", ALERT_SUCC));
                this.msgHelper.setMessages(messages);
            }
            else {
                while (messages.length != 0) {
                    messages.pop();
                }
                for (let i = 0; i < res.length; i++) {
                    messages.push(new ResponseMessage(res[i].message, ALERT_DANGER));
                }
                this.msgHelper.setMessages(messages);
            }
        });
    }
}