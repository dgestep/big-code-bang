import {Component, OnInit} from '@angular/core';
import {UserService} from './user.service';
import {ViewHelper} from '../shared/view.helper';
import {FormBuilder, FormGroup} from '@angular/forms';
import {ServiceResults} from '../shared/service.results';
import {ServiceError} from '../shared/service.error';
import {ResponseMessage} from '../shared/response.message';
import {ALERT_DANGER, ALERT_SUCC} from '../shared/constants';
import {UserPasswordData} from './user.password.data';
import {UserPasswordFormData} from './user.password.form.data';
import {SessionHelper} from '../shared/session.helper';
import {TabManagerService} from '../shared/tab.manager.service';

@Component({
  selector: 'app-change-password',
  templateUrl: 'change.password.component.html'
})
export class UserChangePasswordComponent implements OnInit {
  formData: FormGroup;

  constructor(private userService: UserService, private sessionHelper: SessionHelper,
              private viewHelper: ViewHelper, private formBuilder: FormBuilder,
              private tabManager: TabManagerService) {
  }

  ngOnInit(): void {
    const userPasswordData: UserPasswordFormData = new UserPasswordFormData();
    this.formData = this.formBuilder.group(userPasswordData);
  }

  save(userPasswordData: UserPasswordData): void {
    if (this.formData.value.newPassword !== this.formData.value.confirmPassword) {
      this.viewHelper.setMessage('Passwords do not match.  Please try again.', ALERT_DANGER);
    } else {
      userPasswordData.emailAddress = this.sessionHelper.getSessionObject().emailAddress;
      this.userService.changeUserPassword(userPasswordData).subscribe(response => {
          if (response instanceof ServiceResults) {
            this.viewHelper.setMessage('Password changed successfully!', ALERT_SUCC);

            this.tabManager.removeTabById('app-change-password');
          } else {
            const serviceError = response as ServiceError;
            this.viewHelper.setMessages(serviceError.messages);
          }
        },
        error => {
          this.viewHelper.setMessages(error as Array<ResponseMessage>);
        });
    }
  }
}
