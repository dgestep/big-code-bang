import {Component, OnInit} from '@angular/core';
import {UserService} from './user.service';
import {ViewHelper} from '../shared/view.helper';
import {FormGroup} from '@angular/forms';
import {ServiceResults} from '../shared/service.results';
import {ServiceError} from '../shared/service.error';
import {ResponseMessage} from '../shared/response.message';
import {ALERT_DANGER, ALERT_SUCC} from '../shared/constants';
import {SessionHelper} from '../shared/session.helper';
import {ActivatedRoute, Params, Router} from '@angular/router';

@Component({
  selector: 'app-confirm-password-reset',
  templateUrl: 'user.reset.pw.by.confirm.component.html'
})
export class UserResetPwByConfirmComponent implements OnInit {
  uuid: string;
  emailAddress: string;

  constructor(private userService: UserService, private sessionHelper: SessionHelper,
              private viewHelper: ViewHelper, private activatedRoute: ActivatedRoute,
              private router: Router) {
  }

  ngOnInit(): void {
    if (this.sessionHelper.isLoggedIn()) {
        this.sessionHelper.abandon();
    };

    this.activatedRoute.queryParams.subscribe((params: Params) => {
      this.uuid = params['uuid'];
      this.emailAddress = params['email'];
    });
  }

  resetPassword(): void {
    this.userService.resetPasswordByConfirm(this.uuid, this.emailAddress).subscribe(response => {
        if (response instanceof ServiceResults) {
          const msg: string = 'Your password has been reset. An email has been sent to you with '
            + 'the new password. Check in your SPAM folder if you are not receiving emails from us.';
          this.viewHelper.setMessage(msg, ALERT_SUCC);
        } else {
          const serviceError = response as ServiceError;
          this.viewHelper.setMessages(serviceError.messages);
        }
      },
      error => {
        this.viewHelper.setMessages(error as Array<ResponseMessage>);
      });
  }
}
