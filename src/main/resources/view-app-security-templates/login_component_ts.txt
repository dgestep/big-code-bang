import {Component} from '@angular/core';
import {ResponseMessage} from '../shared/response.message';
import {SessionHelper} from '../shared/session.helper';
import {UserService} from 'app/user/user.service';
import {ViewHelper} from '../shared/view.helper';
import {Router} from '@angular/router';
import {SessionData} from '../shared/session.data';
import {ServiceResults} from '../shared/service.results';
import {ServiceError} from '../shared/service.error';
import {ALERT_DANGER, ALERT_SUCC} from '../shared/constants';

@Component({
  selector: 'app-login',
  templateUrl: 'login.component.html'
})
export class LoginComponent {
  adminUser = false;

  constructor(private userService: UserService, private sessionHelper: SessionHelper,
              private viewHelper: ViewHelper, private router: Router) {
    this.viewHelper.clearMessages();
  }

  /**
   * Submits a login request.
   * @param username the user name.
   * @param password the password.
   */
  onSubmit(username: string, password: string) {
    const messages: Array<ResponseMessage> = [];
    this.viewHelper.clearMessages();

    this.userService.login(username, password).subscribe(res => {
      if (res instanceof ServiceResults) {
        const results: ServiceResults = res as ServiceResults;
        this.sessionHelper.setSessionData(results.data);
        this.sessionHelper.triggerLoginStateChange();

        const sessionData: SessionData = this.sessionHelper.getSessionObject();
        const message: string = 'Welcome ' + sessionData.firstName + ' ' + sessionData.lastName;
        this.viewHelper.setMessage(message, null);

        this.adminUser = sessionData.role === 'ADMIN';
        this.router.navigate(['app-home']);
      } else {
        this.viewHelper.setMessagesFromServiceError(res as ServiceError);
      }
    },
    error => {
      this.viewHelper.setMessages(error as Array<ResponseMessage>);
    });
  }

  forgotPassword(emailAddress: string): void {
    if (emailAddress) {
      this.userService.sendPasswordResetConfirm(emailAddress).subscribe(response => {
        if (response instanceof ServiceResults) {
          const msg = 'An email has been sent to ' + emailAddress + ' with instructions on how to reset the password. '
            + 'Check in your SPAM folder if you are not receiving emails from us.';
          this.viewHelper.setMessage(msg, ALERT_SUCC);
        } else {
          const serviceError = response as ServiceError;
          this.viewHelper.setMessages(serviceError.messages);
        }
      });
    } else  {
      this.viewHelper.setMessage('Please provide your email address and click the Forgot Password button again', ALERT_DANGER);
    }
  }
}
