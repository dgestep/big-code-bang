import {Injectable} from "@angular/core";

@Injectable()
export class PagerService {

    /**
     * Returns the page data associated with the supplied current page.
     * @param allItems all elements to page through.
     * @param currentPage the page to get.
     * @param pageSize the number of items displayed on a page.
     * @returns {Array<any>} the page data.
     */
    getCurrentPageData(allItems: Array<any>, currentPage: number, pageSize: number) {
        let pageData: Array<any>;
        if (allItems) {
            // calculate start and end item indexes
            let startIndex = (currentPage - 1) * pageSize;
            let totalItems = allItems.length;
            let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);
            pageData = allItems.slice(startIndex, endIndex + 1);
        } else {
            pageData = new Array<any>();
        }
        return pageData;
    }

    /**
     * Returns the properties for this pager.
     * @param totalItems the total number of items to page through.
     * @param currentPage the current page.
     * @param pageSize the number of items displayed on a page.
     * @returns {{totalItems: number, currentPage: number, pageSize: number, totalPages: number, startPage: number, endPage: number, startIndex: number, endIndex: number, pages: number[]}}
     */
    getPager(totalItems: number, currentPage: number, pageSize: number) {
        // calculate total pages
        let totalPages = Math.ceil(totalItems / pageSize);

        let startPage: number, endPage: number;
        if (totalPages <= 10) {
            // less than 10 total pages so show all
            startPage = 1;
            endPage = totalPages;
        } else {
            // more than 10 total pages so calculate start and end pages
            if (currentPage <= 6) {
                startPage = 1;
                endPage = 10;
            } else if (currentPage + 4 >= totalPages) {
                startPage = totalPages - 9;
                endPage = totalPages;
            } else {
                startPage = currentPage - 5;
                endPage = currentPage + 4;
            }
        }

        // calculate start and end item indexes
        let startIndex = (currentPage - 1) * pageSize;
        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);

        // create an array of pages to ng-repeat in the pagerComponent control
        let pages = new Array<number>();
        for (var page: number = 1; page <= endPage; page++) {
            pages.push(page);
        }

        // return object with all pagerComponent properties required by the view
        return {
            totalItems: totalItems,
            currentPage: currentPage,
            pageSize: pageSize,
            totalPages: totalPages,
            startPage: startPage,
            endPage: endPage,
            startIndex: startIndex,
            endIndex: endIndex,
            pages: pages
        };
    }
}