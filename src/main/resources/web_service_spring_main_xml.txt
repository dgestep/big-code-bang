<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns:security="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <context:annotation-config/>

    <beans:bean id="restControllerAroundAdvice" class="com.${companyName}.${productName}.restcontroller.RestControllerJsonAroundAdvice"/>

    <aop:config>
        <aop:pointcut id="restControllerPointCut" expression="execution(* com.${companyName}.${productName}.restcontroller..*.*(..))"/>

        <aop:aspect id="restControllerProxy" ref="restControllerAroundAdvice">
            <aop:around pointcut-ref="restControllerPointCut" method="proxyService"/>
        </aop:aspect>
    </aop:config>

    <context:component-scan base-package="com.${companyName}.${productName}.restcontroller"/>

    <beans:bean id="tokenRepository" class="com.${companyName}.${productName}.restcontroller.security.CustomCookieCsrfTokenRepository">
        <beans:property name="cookieHttpOnly" value="false"/>
    </beans:bean>

    <security:http pattern="/restcontroller/security/login" security="none"/>
    <security:http pattern="/restcontroller/security/auto-login" security="none"/>
    <security:http pattern="/restcontroller/health" security="none"/>
    <security:http pattern="/restcontroller/health/version" security="none"/>
    <security:http pattern="/restcontroller/user/reset-confirmation" security="none"/>
    <security:http pattern="/restcontroller/user/reset-password-by-confirmation" security="none"/>

    <security:http pattern="/restcontroller/**" entry-point-ref="RestAuthenticationEntryPoint"
                   create-session="stateless" use-expressions="true" access-decision-manager-ref="accessDecisionManager">
        <!--suppress SpringModelInspection -->
        <security:custom-filter ref="restServicesFilter" before="CSRF_FILTER"/>
        <security:csrf token-repository-ref="tokenRepository"/>
    </security:http>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="roleHierarchyVoter"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="roleHierarchyVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
        <beans:constructor-arg ref="roleHierarchy"/>

        <beans:property name="rolePrefix" value=""/>
    </beans:bean>

    <beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <beans:property name="hierarchy">
            <beans:value>
                ADMIN > USER
                USER > READONLY
            </beans:value>
        </beans:property>
    </beans:bean>

    <beans:bean id="restServicesFilter" class="com.${companyName}.${productName}.restcontroller.security.RestServiceFilter">
        <beans:property name="postOnly" value="false"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>

    <!-- Authentication manager. -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="RestAuthenticationManager"/>
    </security:authentication-manager>

    <security:global-method-security
            secured-annotations="enabled"
            jsr250-annotations="enabled"
            pre-post-annotations="enabled"
            access-decision-manager-ref="accessDecisionManager"/>

    <beans:import resource="classpath:model-spring-context.xml"/>
</beans:beans>
