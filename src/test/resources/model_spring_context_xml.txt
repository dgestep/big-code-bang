<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <tx:annotation-driven proxy-target-class="false" transaction-manager="transactionManager"/>

    <context:component-scan base-package="com.${companyName}.${productName}.model"/>

    <bean id="serviceAroundAdvice" class="com.${companyName}.${productName}.model.aspect.ServiceAroundAdvice"/>

    <aop:config>
        <aop:pointcut id="servicesPointCut" expression="execution(* com.${companyName}.${productName}.model..*Service.*(..))"/>

        <aop:aspect id="serviceProxy" ref="serviceAroundAdvice">
            <aop:around pointcut-ref="servicesPointCut" method="proxyService"/>
        </aop:aspect>
    </aop:config>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="jpaDialect" ref="jpaDialect"/>
        <property name="nestedTransactionAllowed" value="true"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaDialect" ref="jpaDialect"/>
        <property name="jpaVendorAdapter" ref="jpaAdapter"/>

        <property name="packagesToScan">
            <list>
                <value>com.${companyName}.${productName}.model.data</value>
            </list>
        </property>

        <property name="jpaProperties">
            <props>
                <prop key="eclipselink.weaving">false</prop>
                <prop key="eclipselink.query-results-cache">false</prop>
                <prop key="eclipselink.cache.shared.default">false</prop>
            </props>
        </property>
    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
        <property name="database" value="MYSQL" />
        <property name="databasePlatform" value="org.eclipse.persistence.platform.database.MySQLPlatform"/>
        <property name="showSql" value="false"/>
        <property name="generateDdl" value="false"/>
    </bean>

    <bean id="ApplicationRepository" class="com.${companyName}.${productName}.model.repository.ApplicationRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jndiTomcatTemplate" class="com.${companyName}.${productName}.model.TomcatJndiTemplate"/>

    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate">
            <ref bean="jndiTomcatTemplate"/>
        </property>
        <property name="jndiName" value="${databaseJndiName}"/>
    </bean>

    <bean id="SourceExportThreadExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- The number of concurrent threads. Will stack pending requests. -->
        <property name="corePoolSize" value="8" />
        <property name="maxPoolSize" value="8" />
    </bean>

    <util:properties id="app.mail.properties">
        <prop key="mail.host">${mailHostName}</prop>
        <prop key="mail.from">${mailFromAddress}</prop>
    </util:properties>
</beans>